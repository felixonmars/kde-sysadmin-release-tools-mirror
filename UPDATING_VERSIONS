== Release Engineering ==

Choose version number: 
 * remember that RPM is stupid and considers 5.0beta1 newer than
   5.0, so always use "code versions" for the packages. Also
   stuff like "-" etc is not working, so omit it

Make sure that dependencies are met:
 * new phonon release needed?
 * new soprano release needed?
 * new akonadi release needed (check kdepimlibs/akonadi/session_p.h)

Ensure everything is green in build.kde.org
Ensure there are no unrelated local changes, then proceed with updating the version numbers:

For each release (i.e. x.y.z)
 * kdelibs/CMakeLists.txt - KDE_VERSION_*
 * kdelibs/README - This is version x.y.z of the KDE libraries.
 * kdelibs/cmake/modules/KDE4Defaults.cmake - GENERIC_LIB_VERSION and KDE_NON_GENERIC_LIB_VERSION
 * kdelibs/kdecore/sycoca/ksycoca.cpp --> KSYCOCA_VERSION
 * kdepimlibs/CMakeLists.txt - KDEPIMLIBS_VERSION_*
 * kde-workspace/CMakeLists.txt - KDE4WORKSPACE_VERSION_*
 * kdepim/CMakeLists.txt - KDEPIM_DEV_VERSION / KDEPIM_VERSION
 * kdepim-runtime/CMakeLists - KDEPIM_RUNTIME_DEV_VERSION and KDEPIM_RUNTIME_VERSION

For KDE Frameworks releases
 files=`ls -1 frameworks/*/CMakeLists.txt kdereview/plasma-framework/CMakeLists.txt`
 ECM version:
  * extra-cmake-modules/CMakeLists.txt - ECM_*_VERSION
     (then wait for a successful rebuild on build.kde.org, to avoid failing all the frameworks at the next commit)
  * perl -pi -e 's/ECM 0\.0\.[0-9]*/ECM 0\.0\.12/g' `echo $files`
 KF5 version:

   TODO NEXT TIME: first increase "this is my version"

  * perl -pi -e '$_ = "set(KF5_VERSION \"4.98.0\")\n" if (/^set.KF5_VERSION /);' `echo $files`
    for f in `echo $files`; do (d=`dirname $f`; echo $d; cd $d ; git up; git commit -a -m 'Upgrade ECM version requirement and KF5 version.') ; done
  * Now push this up by tiers, to not break CI...
     for f in `grep -l tier:\ 1 */*yaml`; do (cd `dirname $f` ; git push); done
     (wait for CI)
     for f in `grep -l tier:\ 2 */*yaml`; do (cd `dirname $f` ; git push); done
     (wait for CI)
     for d in kconfigwidgets kwallet kservice kpty kjsembed kunitconversion; do (cd $d ; git push) ; done
     (wait for CI)
     kiconthemes kdesu kemoticons
     (wait for CI)
     ktextwidgets knotifications
     (wait for CI)
     kxmlgui
     (wait for CI)
     kcmutils kbookmarks
     (wait for CI)
     kio
     (wait for CI)
     for d in kinit kparts kdeclarative knewstuff knotifyconfig kfileaudiopreview; do (cd $d ; git push) ; done
     (wait for CI)
     for d in ktexteditor ../kde/kdelibs/kactivities kmediaplayer kross kded; do (cd $d ; git push) ; done
     (wait for CI)
     for d in kdewebkit khtml; do (cd $d ; git push) ; done
     (wait for CI)
     for d in ../kdereview/plasma-framework kdesignerplugin frameworkintegration; do (cd $d ; git push) ; done
     (wait for CI)
     krunner kde4support

  * kservice/src/sycoca/ksycoca.cpp --> KSYCOCA_VERSION

