# This is a helper script, which removes the useless stuff from some modules.
# For instance it separates the koffice translations between kde-l10n and koffice-l10n.
# Call it with the package name as argument, like:  ./removestuff kde-l10n
# Usually, you'll want to do this before tagging.

package=$1
version=$2

CDPATH=""

test -n "$package" || { echo "requires modulename as parameter"; exit 1; }

rm_command="rm -rf"
if test -n "$DO_SVN"; then
  rm_command="svn rm"
fi

cd_package()
{
  if test -n "$version" && test -d $package-$version; then
    cd $package-$version
  else
    cd $package || { echo "bah! $package doesn't exist in $PWD"; exit 1; }
  fi
}

# Unlike "pack", this script acts on clean/, because it's supposed to be run
# before tagging.
# but it can also act in dirty, for packaging

  if [ $package = "koffice-l10n" ]; then
  (
     cd_package
     echo "Removing non-koffice stuff"
     $rm_command templates
     if grep -E -q '[a-z] +$' subdirs; then
       echo "subdirs has a trailing space on a line! This breaks stuff, fix it."
       exit 1
     fi
     cp subdirs subdirs.new
     cat subdirs | while read lang; do
       (
         found=""
         test -d $lang && {
         cd $lang
         # Look for koffice stuff in subdirs
         for subdir in data messages docs; do
           subdirlist=""
           if test -d $subdir/koffice; then
             subdirlist="$subdirlist $subdir/koffice"
           fi
           if test -d $subdir/docs/koffice; then
             subdirlist="$subdirlist $subdir/docs/koffice"
           fi
           if test -n "$subdirlist"; then
             found="$found $subdirlist"
           else
             $rm_command $subdir
           fi
         done
         cd ..
         }
         if test -z "$found"; then
           echo "$lang has no koffice translation, removing"
           $rm_command $lang
           sed -e "/^$lang/d" subdirs.new > subdirs.tmpnew
           mv -f subdirs.tmpnew subdirs.new
         else
           echo "$lang: found$found"
         fi
       )
     done
     mv -f subdirs.new subdirs
  ) || exit 1
  fi

  if [ $package = "kde-l10n" ]; then
  (
     cd_package
     echo "Removing other stuff"
     cat subdirs | while read lang; do
       ( cd $lang  && \
         $rm_command internal && \
	 $rm_command messages/*/desktop_* && \
	 $rm_command messages/others && \
         $rm_command docs/others && \
         $rm_command docmessages && \
         $rm_command messages/kdenonbeta && \
         $rm_command docs/kdenonbeta && \
         $rm_command messages/extragear-* && \
         $rm_command docs/extragear-* && \
         $rm_command messages/kdekiosk && \
         $rm_command docs/kdekiosk  && \
	 $rm_command webmessages && \
	 $rm_command messages/play* && \
	 $rm_command messages/kdereview && \
	 $rm_command */koffice && \
         test -e docs/common || $rm_command docs
	)
     done
     echo "Removing template specific stuff"
     $rm_command templates
  )
  fi

  if [ $package = "kde-l10n" -o $package = "koffice-l10n" ]; then
  (
    cd_package
    echo Removing non-released languages from package
    test -f subdirs.orig || { echo "$package/subdirs.orig doesn't exist"; exit 1; }
    grep ^xx subdirs && { echo "$package/subdirs contains the xx language!"; exit 1; }
    cat subdirs.orig | while read lang; do
       if grep -q ^$lang\$ subdirs; then
          echo Keeping $lang
       else
          echo Deleting $lang
          $rm_command $lang
       fi
    done
    ) || exit 1
  fi

  if [ $package = "koffice" ]; then
  (
     cd_package
     echo "Removing non-released stuff"
     $rm_command kplato
  )
  fi

  # generic stuff
  (
     cd_package
     echo "removing Makefile.cvs"
     $rm_command Makefile.cvs
  )

