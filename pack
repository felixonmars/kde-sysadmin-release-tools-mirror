# This is the main script.
# Call it with the package name as argument, like:  ./pack kdelibs
# Make sure to update the version numbers inside the script first.

package=$1

case $package in
  qt-copy)
    version=3.0.4
    ;;
  arts) 
    version=1.0.2
    ;;
  kdevelop)
    version=2.1.2_for_KDE_3.0
    #version=2.1_for_KDE_2.2
    ;;
  kdoc)
    version=2.0a54
    ;;
  koffice)
    version=1.2-beta1
    ;;
  *)
    version=3.0.2
    ;;
esac

CDPATH=""

test -n "$package" || { echo "requires modulename as parameter"; exit 1; }
test -d clean || { echo "create clean subdir with cvs checkout"; exit 1; }
test -d dirty || { echo "create empty subdir dirty"; exit 1; }
test -d sources || { echo "create empty subdir sources"; exit 1; }

test -d clean/$package || { echo "clean/$package does not exist"; exit 1; }
test -d dirty/$package-$version && { echo "rm -rf dirty/$package-$version"; rm -rf dirty/$package-$version; }
test -d dirty/$package && { echo "rm -rf dirty/$package"; rm -rf dirty/$package; }

echo "cp -pr clean/$package dirty"
cp -pr clean/$package dirty || exit 1
{
  echo "cd dirty"
  cd dirty || exit 1
  if [ $package = "kde-i18n" -o $package = "koffice-i18n" ]; then
  ( cd $package 
    echo Removing non-released languages from package
    test -f subdirs.orig || { echo "$package/subdirs.orig doest no exist"; exit 1; }
    cat subdirs.orig | while read lang; do
       if grep -q ^$lang\$ subdirs; then
          echo Keeping $lang
       else
          echo Deleting $lang
          rm -rf $lang
       fi
    done
    )
  fi
  if [ $package = "koffice-i18n" ]; then
  ( cd $package
     ### koffice release specific
     echo "Removing non-koffice stuff"
     perl -pi -e 's/kde-i18n/koffice-i18n/g; s/kdelibs.po/Makefile.am/g' Makefile.am
     rm -rf templates */data */docs
     cat subdirs | while read lang; do
       ( cd $lang  && \
         mv messages messages.orig && \
	 mkdir messages && \
         mv messages.orig/Makefile.am messages/ &&\
         mv messages.orig/koffice messages/ &&\
	 rm -rf messages.orig)
     done
    #####
  )
  fi
  if [ $package = "kde-i18n" ]; then
  ( cd $package
     echo "Removing other stuff"
     cat subdirs | while read lang; do
       ( cd $lang  && \
	 rm -rf messages/others && \
         rm -rf docs/others )
     done
    #####
  )
  ( cd $package
     echo "Removing koffice specific stuff"
     cat subdirs | while read lang; do
       ( cd $lang  && \
         rm -rf */koffice \
         rm -rf messages/docs/koffice )
     done
    #####
  )
  fi
  if [ $package = "koffice" ]; then
  ( cd $package
    ### koffice release specific
     echo "Removing non-released stuff"
    # rm -rf krayon kplato graphite kosoap
    #####
  )
  fi

  # Anonymize the CVS dirs
  echo "anon $package"
  ../anon $package || exit 1

  # Generate docu
  echo "docu $package"
  ../docu $package 

  # Prepare for distribution
  echo "dist $package"
  ../dist $package $version || exit 1

  # Final packaging
  echo "mv $package $package-$version"
  mv $package $package-$version || exit 1
  echo "tar cjf $package-$version.tar.bz2 $package-$version"
  tar --owner=root --group=root -cjf ../sources/$package-$version.tar.bz2 $package-$version || exit 1
}
rm -rf dirty/$package || exit 1
