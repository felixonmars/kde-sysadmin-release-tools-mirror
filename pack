# This is the main script.
# Call it with the package name as argument, like:  ./pack kdelibs
# Make sure to update the version numbers inside the script first.

package=$1

case $package in
  qt-copy)
    version=3.0.4
    ;;
  arts) 
    version=1.0.3
    ;;
  kdevelop)
    version=2.1.2_for_KDE_3.0
    #version=2.1.2_for_KDE_2.2
    ;;
  kdoc)
    version=2.0a54
    ;;
  koffice)
    version=1.2-rc1
    ;;
  koffice-i18n)
    version=1.2-rc1
    ;;
  *)
    version=3.0.6
    ;;
esac

CDPATH=""

test -n "$package" || { echo "requires modulename as parameter"; exit 1; }
test -d clean || { echo "create clean subdir with cvs checkout"; exit 1; }
test -d dirty || { echo "create empty subdir dirty"; exit 1; }
test -d sources || { echo "create empty subdir sources"; exit 1; }

test -d clean/$package || { echo "clean/$package does not exist"; exit 1; }
test -d dirty/$package-$version && { echo "rm -rf dirty/$package-$version"; rm -rf dirty/$package-$version; }
test -d dirty/$package && { echo "rm -rf dirty/$package"; rm -rf dirty/$package; }

echo "cp -pr clean/$package dirty"
cp -pr clean/$package dirty || exit 1
{
  echo "cd dirty"
  cd dirty || exit 1

  # remove nonreleased stuff
  echo "removestuff $package"
  ../removestuff $package $version || exit 1

  # Anonymize the CVS dirs
  echo "anon $package"
  ../anon $package || exit 1

  # Generate docu
  echo "docu $package"
  ../docu $package 

  # Prepare for distribution
  echo "dist $package"
  ../dist $package $version || exit 1

  # Final packaging
  echo "mv $package $package-$version"
  mv $package $package-$version || exit 1
  echo "tar cjf $package-$version.tar.bz2 $package-$version"
  tar --owner=root --group=root -cjf ../sources/$package-$version.tar.bz2 $package-$version || exit 1
}
rm -rf dirty/$package || exit 1
